
if(build_module_user_versions.isModule) {
    apply plugin: 'com.android.library'
    apply plugin: 'com.jakewharton.butterknife'
}else{
    apply plugin: 'com.android.application'
}

android {
    compileSdkVersion build_module_user_versions.compile_sdk
    buildToolsVersion build_module_user_versions.build_tools
    defaultConfig {
        if(!build_module_user_versions.isModule) {
            applicationId build_module_user_versions.application_id
        }
        minSdkVersion build_module_user_versions.min_sdk
        targetSdkVersion build_module_user_versions.target_sdk
        versionCode build_module_user_versions.code
        versionName build_module_user_versions.name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }

        resourcePrefix "module_user_"

    }

    sourceSets {
        main {
            if (!build_module_user_versions.isModule) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //release模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    // 使用Java1.8
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
        // as noted by @Vishnuvathsan you may also need to include
        // variations on the file name. It depends on your dependencies.
        // Some other common variations on notice and license file names
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
        // 防止在发布的时候出现因MissingTranslation导致Build Failed!
        disable 'MissingTranslation'
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    annotationProcessor deps.dagger.compiler
    annotationProcessor deps.dagger.android_support_compiler
    annotationProcessor deps.arouter.compiler
    annotationProcessor deps.butterknife.compiler

    api project(path: ':libres')
    api project(path: ':libdata')
    api project(path: ':libbase')
    api project(path: ':libprovider')
}
