apply plugin: 'com.android.application'

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId build_versions.application_id
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.code
        versionName build_versions.name
        // dex突破65535的限制
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }

    }

    signingConfigs {
        release {
            keyAlias 'jz'
            keyPassword '123456'
            storeFile file('../building_system/jz.jks')
            storePassword '123456'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    // 使用Java1.8
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
        // as noted by @Vishnuvathsan you may also need to include
        // variations on the file name. It depends on your dependencies.
        // Some other common variations on notice and license file names
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
        // 防止在发布的时候出现因MissingTranslation导致Build Failed!
        disable 'MissingTranslation'
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    annotationProcessor deps.dagger.compiler
    annotationProcessor deps.dagger.android_support_compiler
    annotationProcessor deps.arouter.compiler
    annotationProcessor deps.butterknife.compiler

    api project(path: ':libres')
    api project(path: ':libbase')
    api project(path: ':libdata')
    api project(path: ':libprovider')

    if(build_module_user_versions.isModule) {
        api project(path: ':moduleusers')
    }

    if(build_module_search_versions.isModule) {
        api project(path: ':modulesearch')
    }

}


